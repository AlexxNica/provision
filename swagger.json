{
    "swagger": "2.0",
    "info": {
        "version": "v3.0",
        "title": "rocket-skates",
        "description": "Protocol for Bare Metal Provider"
    },
    "host": "127.0.0.1:8092",
    "basePath": "/api/v3",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "Authorization": {
            "name": "Authorization",
            "type": "apiKey",
            "in": "header"
        },
        "auth_token": {
            "name": "auth_token",
            "type": "apiKey",
            "in": "query"
        },
        "rebar": {
            "type": "basic"
        }
    },
    "paths": {
        "/reservations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-dhcp-reservation",
                "summary": "Get DHCP Reservation",
                "tags": [
                    "Dhcp reservations"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-reservation-input"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-dhcp-reservation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-dhcp-reservation",
                "summary": "Update DHCP Reservation",
                "tags": [
                    "Dhcp reservations"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dhcp-reservation-input"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-reservation-input"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-dhcp-reservation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-dhcp-reservation",
                "summary": "Delete DHCP Reservation",
                "tags": [
                    "Dhcp reservations"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-dhcp-reservation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/reservations": {
            "get": {
                "operationId": "LIST-dhcp-reservations",
                "summary": "List Dhcp reservations",
                "tags": [
                    "Dhcp reservations"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dhcp-reservation-input"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-dhcp-reservations",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-dhcp-reservation",
                "summary": "Create DHCP Reservation",
                "tags": [
                    "Dhcp reservations"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dhcp-reservation-input"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-reservation-input"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-dhcp-reservation",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/subnets/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "GET-dhcp-subnet",
                "summary": "Get DHCP Subnet",
                "tags": [
                    "Dhcp subnets"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-subnet-input"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "GET-dhcp-subnet",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "PUT-dhcp-subnet",
                "summary": "Update DHCP Subnet",
                "tags": [
                    "Dhcp subnets"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dhcp-subnet-input"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-subnet-input"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "PUT-dhcp-subnet",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "DELETE-dhcp-subnet",
                "summary": "Delete DHCP Subnet",
                "tags": [
                    "Dhcp subnets"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    }
                },
                "x-stoplight": {
                    "id": "DELETE-dhcp-subnet",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/subnets": {
            "get": {
                "operationId": "LIST-dhcp-subnets",
                "summary": "List Dhcp subnets",
                "tags": [
                    "Dhcp subnets"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dhcp-subnet-input"
                            }
                        }
                    }
                },
                "x-stoplight": {
                    "id": "LIST-dhcp-subnets",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "POST-dhcp-subnet",
                "summary": "Create DHCP Subnet",
                "tags": [
                    "Dhcp subnets"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dhcp-subnet-input"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-subnet-input"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "POST-dhcp-subnet",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/leases/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "get-dhcp-lease",
                "summary": "Get DHCP Lease",
                "tags": [
                    "Dhcp leases"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-lease-input"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "get-dhcp-lease",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "put-dhcp-lease",
                "summary": "Update DHCP Lease",
                "tags": [
                    "Dhcp leases"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dhcp-lease-input"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-lease-input"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPutResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPutResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPutResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPutResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "put-dhcp-lease",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "delete-dhcp-lease",
                "summary": "Delete DHCP Lease",
                "tags": [
                    "Dhcp leases"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonDeleteResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonDeleteResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonDeleteResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonDeleteResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "delete-dhcp-lease",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/leases": {
            "get": {
                "operationId": "list-dhcp-leases",
                "summary": "List Dhcp leases",
                "tags": [
                    "Dhcp leases"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dhcp-lease-input"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "list-dhcp-leases",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "post-dhcp-lease",
                "summary": "Create DHCP Lease",
                "tags": [
                    "Dhcp leases"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/dhcp-lease-input"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/dhcp-lease-input"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPostResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "post-dhcp-lease",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/files": {
            "get": {
                "operationId": "list-files",
                "summary": "List Files",
                "tags": [
                    "Files"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "list-files",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/files/{path}": {
            "parameters": [
                {
                    "name": "path",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "operationId": "post-file",
                "summary": "Create File",
                "tags": [
                    "Files"
                ],
                "consumes": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Name": {
                                    "type": "string"
                                },
                                "Size": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    },
                    "507": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "post-file",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "get": {
                "operationId": "get-file",
                "summary": "Get File",
                "tags": [
                    "Files"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "format": "binary"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "get-file",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "delete-file",
                "summary": "Delete File",
                "tags": [
                    "Files"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonDeleteResponses:401"
                    },
                    "403": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonDeleteResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonDeleteResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonDeleteResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "delete-file",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/bootenvs": {
            "get": {
                "operationId": "list-bootenvs",
                "summary": "List Bootenvs",
                "tags": [
                    "Bootenvs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/bootenv-output"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "list-bootenvs",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/bootenv": {
            "post": {
                "operationId": "post-bootenv",
                "summary": "Create Bootenv",
                "tags": [
                    "Bootenvs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/bootenv-input",
                            "example": {
                                "Available": false,
                                "BootParams": "",
                                "Errors": [
                                    "bootenv: windows-2012r2-install: missing kernel wimboot (/tftpboot/windows-2012r2/install/wimboot)",
                                    "bootenv: windows-2012r2-install: missing initrd boot/bcd (/tftpboot/windows-2012r2/install/boot/bcd)",
                                    "bootenv: windows-2012r2-install: missing initrd boot/boot.sdi (/tftpboot/windows-2012r2/install/boot/boot.sdi)",
                                    "bootenv: windows-2012r2-install: missing initrd rebar-winpe.wim (/tftpboot/windows-2012r2/install/rebar-winpe.wim)"
                                ],
                                "Initrds": [
                                    "boot/bcd",
                                    "boot/boot.sdi",
                                    "rebar-winpe.wim"
                                ],
                                "Kernel": "wimboot",
                                "Name": "windows-2012r2-install",
                                "OS": {
                                    "Codename": "",
                                    "Family": "",
                                    "Files": null,
                                    "IsoFile": "rebar-win2012r2.iso",
                                    "IsoSha256": "8ce9f9b23aaf397913d927c7fda3343d411f6846ef7b94f29b51108e95c46f6e",
                                    "IsoUrl": "",
                                    "Name": "windows-2012r2",
                                    "Version": ""
                                },
                                "RequiredParams": [
                                    "logging_servers",
                                    "ntp_servers",
                                    "operating-system-disk",
                                    "provisioner-default-password-hash",
                                    "proxy-servers",
                                    "use-proxy",
                                    "rebar-access_keys",
                                    "rebar-machine_key",
                                    "operating-system-license-key",
                                    "operating-system-install-flavor"
                                ],
                                "Templates": [
                                    {
                                        "Name": "pxelinux",
                                        "Path": "pxelinux.cfg/{{.Machine.HexAddress}}",
                                        "UUID": "windows.pxelinux.tmpl"
                                    },
                                    {
                                        "Name": "ipxe",
                                        "Path": "{{.Machine.Address}}.ipxe",
                                        "UUID": "windows.ipxe.tmpl"
                                    },
                                    {
                                        "Name": "start-install",
                                        "Path": "{{.Machine.Path}}/stage1.ps1",
                                        "UUID": "stage1.cmd.tmpl"
                                    },
                                    {
                                        "Name": "unattend.xml",
                                        "Path": "{{.Machine.Path}}/unattend.xml",
                                        "UUID": "2012r2-unattend.xml.tmpl"
                                    }
                                ],
                                "TenantId": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/bootenv-output"
                        }
                    },
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/bootenv-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPostResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "post-bootenv",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/bootenvs/{name}": {
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "get-bootenv",
                "summary": "Get Bootenv",
                "tags": [
                    "Bootenvs"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/bootenv-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "get-bootenv",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "operationId": "patch-bootenv",
                "summary": "Patch Bootenv",
                "tags": [
                    "Bootenvs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/patchinput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/bootenv-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPatchResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPatchResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPatchResponses:409"
                    },
                    "417": {
                        "$ref": "#/responses/trait:commonPatchResponses:417"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPatchResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "patch-bootenv",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "put-bootenv",
                "summary": "Update Bootenv",
                "tags": [
                    "Bootenvs"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/bootenv-input",
                            "example": {
                                "Available": false,
                                "BootParams": "",
                                "Errors": [
                                    "bootenv: windows-2012r2-install: missing kernel wimboot (/tftpboot/windows-2012r2/install/wimboot)",
                                    "bootenv: windows-2012r2-install: missing initrd boot/bcd (/tftpboot/windows-2012r2/install/boot/bcd)",
                                    "bootenv: windows-2012r2-install: missing initrd boot/boot.sdi (/tftpboot/windows-2012r2/install/boot/boot.sdi)",
                                    "bootenv: windows-2012r2-install: missing initrd rebar-winpe.wim (/tftpboot/windows-2012r2/install/rebar-winpe.wim)"
                                ],
                                "Initrds": [
                                    "boot/bcd",
                                    "boot/boot.sdi",
                                    "rebar-winpe.wim"
                                ],
                                "Kernel": "wimboot",
                                "Name": "windows-2012r2-install",
                                "OS": {
                                    "Codename": "",
                                    "Family": "",
                                    "Files": null,
                                    "IsoFile": "rebar-win2012r2.iso",
                                    "IsoSha256": "8ce9f9b23aaf397913d927c7fda3343d411f6846ef7b94f29b51108e95c46f6e",
                                    "IsoUrl": "",
                                    "Name": "windows-2012r2",
                                    "Version": ""
                                },
                                "RequiredParams": [
                                    "logging_servers",
                                    "ntp_servers",
                                    "operating-system-disk",
                                    "provisioner-default-password-hash",
                                    "proxy-servers",
                                    "use-proxy",
                                    "rebar-access_keys",
                                    "rebar-machine_key",
                                    "operating-system-license-key",
                                    "operating-system-install-flavor"
                                ],
                                "Templates": [
                                    {
                                        "Name": "pxelinux",
                                        "Path": "pxelinux.cfg/{{.Machine.HexAddress}}",
                                        "UUID": "windows.pxelinux.tmpl"
                                    },
                                    {
                                        "Name": "ipxe",
                                        "Path": "{{.Machine.Address}}.ipxe",
                                        "UUID": "windows.ipxe.tmpl"
                                    },
                                    {
                                        "Name": "start-install",
                                        "Path": "{{.Machine.Path}}/stage1.ps1",
                                        "UUID": "stage1.cmd.tmpl"
                                    },
                                    {
                                        "Name": "unattend.xml",
                                        "Path": "{{.Machine.Path}}/unattend.xml",
                                        "UUID": "2012r2-unattend.xml.tmpl"
                                    }
                                ],
                                "TenantId": 1
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/bootenv-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPutResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPutResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPutResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPutResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "put-bootenv",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "delete-bootenv",
                "summary": "Delete Bootenv",
                "tags": [
                    "Bootenvs"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonDeleteResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonDeleteResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonDeleteResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonDeleteResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "delete-bootenv",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/isos": {
            "get": {
                "operationId": "list-isos",
                "summary": "List Isos",
                "tags": [
                    "Isos"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "list-isos",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/isos/{name}": {
            "parameters": [
                {
                    "name": "name",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "operationId": "post-iso",
                "summary": "Create Iso",
                "tags": [
                    "Isos"
                ],
                "consumes": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "Size": {
                                    "type": "integer"
                                },
                                "Name": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    },
                    "507": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    }
                },
                "x-stoplight": {
                    "id": "post-iso",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "get": {
                "operationId": "get-iso",
                "summary": "Get Iso",
                "tags": [
                    "Isos"
                ],
                "produces": [
                    "application/octet-stream"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "format": "binary"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "get-iso",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "delete-iso",
                "summary": "Delete Iso",
                "tags": [
                    "Isos"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonDeleteResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonDeleteResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonDeleteResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonDeleteResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "delete-iso",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/templates": {
            "get": {
                "operationId": "list-templates",
                "summary": "List Templates",
                "tags": [
                    "Templates"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/template-output"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "list-templates",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "post-template",
                "summary": "Create Template",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/template-input",
                            "example": {
                                "Contents": "net use Q: \"\\\\{{.ProvisionerAddress}}\\tftpboot\"\nQ:\\{{.Env.OS.Name}}\\install\\setup.exe /unattend:Q:\\machines\\{{.Machine.UUID}}\\unattend.xml\n",
                                "TenantId": 1,
                                "UUID": "stage1.ps1.tmpl"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPostResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "post-template",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/templates/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "operationId": "replace-template",
                "summary": "Replace Template",
                "tags": [
                    "Templates"
                ],
                "consumes": [
                    "application/octet-stream"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "format": "binary"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPostResponses:409"
                    },
                    "417": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/error"
                        }
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "replace-template",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "get": {
                "operationId": "get-template",
                "summary": "Get Template",
                "tags": [
                    "Templates"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "get-template",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "put-template",
                "summary": "Update Template",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/template-input",
                            "example": {
                                "Contents": "net use Q: \"\\\\{{.ProvisionerAddress}}\\tftpboot\"\nQ:\\{{.Env.OS.Name}}\\install\\setup.exe /unattend:Q:\\machines\\{{.Machine.UUID}}\\unattend.xml\n",
                                "TenantId": 1,
                                "UUID": "stage1.ps1.tmpl"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPutResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPutResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPutResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPutResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "put-template",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "delete-template",
                "summary": "Delete Template",
                "tags": [
                    "Templates"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonDeleteResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonDeleteResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonDeleteResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonDeleteResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "delete-template",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/template/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "patch": {
                "operationId": "patch-template",
                "summary": "Patch Template",
                "tags": [
                    "Templates"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/patchinput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/template-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPatchResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPatchResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPatchResponses:409"
                    },
                    "417": {
                        "$ref": "#/responses/trait:commonPatchResponses:417"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPatchResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "patch-template",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/machines": {
            "get": {
                "operationId": "list-machines",
                "summary": "List Machines",
                "tags": [
                    "Machines"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/machine-output"
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "list-machines",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "post": {
                "operationId": "post-machine",
                "summary": "Create Machine",
                "tags": [
                    "Machines"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/machine-input",
                            "example": {
                                "Address": "192.168.124.84",
                                "BootEnv": "local",
                                "Name": "d52-54-3d-49-00-00.local.neode.org",
                                "Params": {},
                                "TenantId": 1,
                                "Uuid": "0f2a8f98-af51-415e-ad4f-cfea69adaed3"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/machine-output"
                        }
                    },
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/machine-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPostResponses:401"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPostResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPostResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "post-machine",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        },
        "/machines/{uuid}": {
            "parameters": [
                {
                    "name": "uuid",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "operationId": "get-machine",
                "summary": "Get Machine",
                "tags": [
                    "Machines"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/machine-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonGetResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonGetResponses:404"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonGetResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "get-machine",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "put": {
                "operationId": "put-machine",
                "summary": "Update Machine",
                "tags": [
                    "Machines"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/machine-input",
                            "example": {
                                "Address": "192.168.124.84",
                                "BootEnv": "local",
                                "Name": "d52-54-3d-49-00-00.local.neode.org",
                                "Params": {},
                                "TenantId": 1,
                                "Uuid": "0f2a8f98-af51-415e-ad4f-cfea69adaed3"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/machine-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPutResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPutResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPutResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPutResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "put-machine",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "patch": {
                "operationId": "patch-machine",
                "summary": "Patch Machine",
                "tags": [
                    "Machines"
                ],
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/patchinput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/machine-output"
                        }
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonPatchResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonPatchResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonPatchResponses:409"
                    },
                    "417": {
                        "$ref": "#/responses/trait:commonPatchResponses:417"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonPatchResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "patch-machine",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            },
            "delete": {
                "operationId": "delete-machine",
                "summary": "Delete Machine",
                "tags": [
                    "Machines"
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "401": {
                        "$ref": "#/responses/trait:commonDeleteResponses:401"
                    },
                    "404": {
                        "$ref": "#/responses/trait:commonDeleteResponses:404"
                    },
                    "409": {
                        "$ref": "#/responses/trait:commonDeleteResponses:409"
                    },
                    "500": {
                        "$ref": "#/responses/trait:commonDeleteResponses:500"
                    }
                },
                "x-stoplight": {
                    "id": "delete-machine",
                    "beforeScript": null,
                    "afterScript": null,
                    "public": true,
                    "mock": {
                        "enabled": false,
                        "dynamic": false,
                        "statusCode": 200
                    }
                }
            }
        }
    },
    "responses": {
        "trait:commonGetResponses:401": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonGetResponses:404": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonGetResponses:500": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonDeleteResponses:401": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonDeleteResponses:404": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonDeleteResponses:409": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonDeleteResponses:500": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPostResponses:401": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPostResponses:409": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPostResponses:500": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPutResponses:401": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPutResponses:404": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPutResponses:409": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPutResponses:500": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPatchResponses:401": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPatchResponses:404": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPatchResponses:409": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPatchResponses:417": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "trait:commonPatchResponses:500": {
            "description": "",
            "schema": {
                "$ref": "#/definitions/error"
            }
        }
    },
    "definitions": {
        "machine-input": {
            "title": "Machine Input",
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string",
                    "format": "ipv4"
                },
                "BootEnv": {
                    "type": "string"
                },
                "Name": {
                    "type": "string",
                    "format": "hostname"
                },
                "Params": {
                    "$ref": "#/definitions/parameterobjectmap"
                },
                "TenantId": {
                    "type": "integer"
                },
                "Uuid": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "example": {
                "Address": "192.168.124.84",
                "BootEnv": "local",
                "Name": "d52-54-3d-49-00-00.local.neode.org",
                "Params": {},
                "TenantId": 1,
                "Uuid": "0f2a8f98-af51-415e-ad4f-cfea69adaed3"
            },
            "x-stoplight": {
                "id": "machine-input",
                "name": "Machine Input",
                "public": true
            }
        },
        "machine-output": {
            "title": "Machine Output",
            "allOf": [
                {
                    "$ref": "#/definitions/machine-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "Errors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-stoplight": {
                "id": "machine-output",
                "name": "Machine Output",
                "public": true
            }
        },
        "parameterobjectmap": {
            "title": "ParameterObjectMap",
            "additionalProperties": {
                "type": "object"
            },
            "x-stoplight": {
                "id": "parameterobjectmap",
                "name": "ParameterObjectMap",
                "public": true
            }
        },
        "error": {
            "title": "Error",
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            },
            "x-stoplight": {
                "id": "error",
                "name": "Error",
                "public": true
            }
        },
        "template-input": {
            "title": "Template Input",
            "type": "object",
            "properties": {
                "Contents": {
                    "type": "string"
                },
                "UUID": {
                    "type": "string"
                }
            },
            "example": {
                "Contents": "net use Q: \"\\\\{{.ProvisionerAddress}}\\tftpboot\"\nQ:\\{{.Env.OS.Name}}\\install\\setup.exe /unattend:Q:\\machines\\{{.Machine.UUID}}\\unattend.xml\n",
                "TenantId": 1,
                "UUID": "stage1.ps1.tmpl"
            },
            "x-stoplight": {
                "id": "template-input",
                "name": "Template Input",
                "public": true
            }
        },
        "patchinput": {
            "title": "PatchInput",
            "type": "array",
            "items": {
                "$ref": "#/definitions/patchline"
            },
            "x-stoplight": {
                "id": "patchinput",
                "name": "PatchInput",
                "public": true
            }
        },
        "patchline": {
            "title": "PatchLine",
            "type": "object",
            "properties": {
                "Op": {
                    "type": "string"
                },
                "Path": {
                    "type": "string"
                },
                "From": {
                    "type": "string"
                },
                "Value": {}
            },
            "x-stoplight": {
                "id": "patchline",
                "name": "PatchLine",
                "public": true
            }
        },
        "template-output": {
            "title": "Template Output",
            "allOf": [
                {
                    "$ref": "#/definitions/template-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "Errors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-stoplight": {
                "id": "template-output",
                "name": "Template Output",
                "public": true
            }
        },
        "bootenv-input": {
            "title": "Bootenv Input",
            "type": "object",
            "properties": {
                "Available": {
                    "type": "boolean"
                },
                "BootParams": {
                    "type": "string"
                },
                "Initrds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Kernel": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "OS": {
                    "type": "object",
                    "properties": {
                        "Codename": {
                            "type": "string"
                        },
                        "Family": {
                            "type": "string"
                        },
                        "IsoFile": {
                            "type": "string"
                        },
                        "IsoSha256": {
                            "type": "string"
                        },
                        "IsoUrl": {
                            "type": "string"
                        },
                        "Name": {
                            "type": "string"
                        },
                        "Version": {
                            "type": "string"
                        }
                    }
                },
                "RequiredParams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "Templates": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "Name": {
                                "type": "string"
                            },
                            "Path": {
                                "type": "string"
                            },
                            "UUID": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "example": {
                "Available": false,
                "BootParams": "",
                "Errors": [
                    "bootenv: windows-2012r2-install: missing kernel wimboot (/tftpboot/windows-2012r2/install/wimboot)",
                    "bootenv: windows-2012r2-install: missing initrd boot/bcd (/tftpboot/windows-2012r2/install/boot/bcd)",
                    "bootenv: windows-2012r2-install: missing initrd boot/boot.sdi (/tftpboot/windows-2012r2/install/boot/boot.sdi)",
                    "bootenv: windows-2012r2-install: missing initrd rebar-winpe.wim (/tftpboot/windows-2012r2/install/rebar-winpe.wim)"
                ],
                "Initrds": [
                    "boot/bcd",
                    "boot/boot.sdi",
                    "rebar-winpe.wim"
                ],
                "Kernel": "wimboot",
                "Name": "windows-2012r2-install",
                "OS": {
                    "Codename": "",
                    "Family": "",
                    "Files": [],
                    "IsoFile": "rebar-win2012r2.iso",
                    "IsoSha256": "8ce9f9b23aaf397913d927c7fda3343d411f6846ef7b94f29b51108e95c46f6e",
                    "IsoUrl": "",
                    "Name": "windows-2012r2",
                    "Version": ""
                },
                "RequiredParams": [
                    "logging_servers",
                    "ntp_servers",
                    "operating-system-disk",
                    "provisioner-default-password-hash",
                    "proxy-servers",
                    "use-proxy",
                    "rebar-access_keys",
                    "rebar-machine_key",
                    "operating-system-license-key",
                    "operating-system-install-flavor"
                ],
                "Templates": [
                    {
                        "Name": "pxelinux",
                        "Path": "pxelinux.cfg/{{.Machine.HexAddress}}",
                        "UUID": "windows.pxelinux.tmpl"
                    },
                    {
                        "Name": "ipxe",
                        "Path": "{{.Machine.Address}}.ipxe",
                        "UUID": "windows.ipxe.tmpl"
                    },
                    {
                        "Name": "start-install",
                        "Path": "{{.Machine.Path}}/stage1.ps1",
                        "UUID": "stage1.cmd.tmpl"
                    },
                    {
                        "Name": "unattend.xml",
                        "Path": "{{.Machine.Path}}/unattend.xml",
                        "UUID": "2012r2-unattend.xml.tmpl"
                    }
                ],
                "TenantId": 1
            },
            "x-stoplight": {
                "id": "bootenv-input",
                "name": "Bootenv Input",
                "public": true
            }
        },
        "principal": {
            "title": "Principal",
            "type": "string",
            "x-stoplight": {
                "id": "principal",
                "name": "Principal",
                "public": true
            }
        },
        "bootenv-output": {
            "title": "Bootenv  Output",
            "allOf": [
                {
                    "$ref": "#/definitions/bootenv-input"
                },
                {
                    "type": "object",
                    "properties": {
                        "Errors": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            ],
            "x-stoplight": {
                "id": "bootenv-output",
                "name": "Bootenv  Output",
                "public": true
            }
        },
        "dhcp-lease-input": {
            "title": "DHCP Lease Input",
            "type": "object",
            "properties": {
                "IpAddress": {
                    "type": "string",
                    "format": "ipv4"
                },
                "MacAddress": {
                    "type": "string",
                    "minLength": 17,
                    "maxLength": 17,
                    "pattern": "^([0-9a-f]{2}):{5}[0-9a-f]{2}$"
                },
                "Valid": {
                    "type": "boolean"
                },
                "ExpireTime": {
                    "type": "string",
                    "format": "date-time"
                }
            },
            "required": [
                "IpAddress",
                "MacAddress",
                "Valid",
                "ExpireTime"
            ],
            "x-stoplight": {
                "id": "dhcp-lease-input",
                "name": "DHCP Lease Input",
                "public": true
            }
        },
        "dhcpoption": {
            "title": "DhcpOption",
            "type": "object",
            "properties": {
                "Code": {
                    "type": "integer"
                },
                "Value": {
                    "type": "string"
                }
            },
            "required": [
                "Code",
                "Value"
            ],
            "x-stoplight": {
                "id": "dhcpoption",
                "name": "DhcpOption",
                "public": true
            }
        },
        "dhcp-subnet-input": {
            "title": "DHCP Subnet Input",
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Subnet": {
                    "type": "string",
                    "pattern": "^([0-9]{1-3}\\.){,3}[0-9]{,3}/[0-9]{,2}$"
                },
                "NextServer": {
                    "type": "string",
                    "format": "ipv4"
                },
                "ActiveStart": {
                    "type": "string",
                    "format": "ipv4"
                },
                "ActiveEnd": {
                    "type": "string",
                    "format": "ipv4"
                },
                "ActiveLeaseTime": {
                    "type": "integer",
                    "default": 300
                },
                "ReservedLeaseTime": {
                    "type": "integer",
                    "default": 7200
                },
                "OnlyBoundLeases": {
                    "type": "boolean",
                    "default": false
                },
                "Options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dhcpoption"
                    }
                }
            },
            "required": [
                "Name",
                "Subnet",
                "ActiveStart",
                "ActiveEnd",
                "ActiveLeaseTime",
                "ReservedLeaseTime"
            ],
            "x-stoplight": {
                "id": "dhcp-subnet-input",
                "name": "DHCP Subnet Input",
                "public": true
            }
        },
        "dhcp-reservation-input": {
            "title": "DHCP Reservation Input",
            "type": "object",
            "properties": {
                "IpAddress": {
                    "type": "string",
                    "format": "ipv4"
                },
                "MacAddress": {
                    "type": "string"
                },
                "Options": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dhcpoption"
                    }
                },
                "NextServer": {
                    "type": "string",
                    "format": "ipv4"
                }
            },
            "required": [
                "IpAddress",
                "MacAddress"
            ],
            "x-stoplight": {
                "id": "dhcp-reservation-input",
                "name": "DHCP Reservation Input",
                "public": true
            }
        }
    },
    "x-stoplight": {
        "beforeScript": "",
        "afterScript": "",
        "version": {
            "groups": {
                "savedEntries": [],
                "tests": [],
                "traits": [],
                "docs": [
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "GET-dhcp-reservation"
                            },
                            {
                                "type": "endpoints",
                                "_id": "LIST-dhcp-reservations"
                            },
                            {
                                "type": "endpoints",
                                "_id": "PUT-dhcp-reservation"
                            },
                            {
                                "type": "endpoints",
                                "_id": "POST-dhcp-reservation"
                            },
                            {
                                "type": "endpoints",
                                "_id": "DELETE-dhcp-reservation"
                            }
                        ],
                        "divider": false,
                        "name": "Dhcp reservations"
                    },
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "GET-dhcp-subnet"
                            },
                            {
                                "type": "endpoints",
                                "_id": "LIST-dhcp-subnets"
                            },
                            {
                                "type": "endpoints",
                                "_id": "PUT-dhcp-subnet"
                            },
                            {
                                "type": "endpoints",
                                "_id": "POST-dhcp-subnet"
                            },
                            {
                                "type": "endpoints",
                                "_id": "DELETE-dhcp-subnet"
                            }
                        ],
                        "divider": false,
                        "name": "Dhcp subnets"
                    },
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "get-dhcp-lease"
                            },
                            {
                                "type": "endpoints",
                                "_id": "list-dhcp-leases"
                            },
                            {
                                "type": "endpoints",
                                "_id": "put-dhcp-lease"
                            },
                            {
                                "type": "endpoints",
                                "_id": "post-dhcp-lease"
                            },
                            {
                                "type": "endpoints",
                                "_id": "delete-dhcp-lease"
                            }
                        ],
                        "divider": false,
                        "name": "Dhcp leases"
                    },
                    {
                        "name": "Files",
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "list-files"
                            },
                            {
                                "type": "endpoints",
                                "_id": "post-file"
                            },
                            {
                                "type": "endpoints",
                                "_id": "get-file"
                            },
                            {
                                "type": "endpoints",
                                "_id": "delete-file"
                            }
                        ],
                        "divider": false
                    },
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "list-bootenvs"
                            },
                            {
                                "type": "endpoints",
                                "_id": "post-bootenv"
                            },
                            {
                                "type": "endpoints",
                                "_id": "get-bootenv"
                            },
                            {
                                "type": "endpoints",
                                "_id": "patch-bootenv"
                            },
                            {
                                "type": "endpoints",
                                "_id": "put-bootenv"
                            },
                            {
                                "type": "endpoints",
                                "_id": "delete-bootenv"
                            }
                        ],
                        "divider": false,
                        "name": "Bootenvs"
                    },
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "list-isos"
                            },
                            {
                                "type": "endpoints",
                                "_id": "post-iso"
                            },
                            {
                                "type": "endpoints",
                                "_id": "get-iso"
                            },
                            {
                                "type": "endpoints",
                                "_id": "delete-iso"
                            }
                        ],
                        "divider": false,
                        "name": "Isos"
                    },
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "list-templates"
                            },
                            {
                                "type": "endpoints",
                                "_id": "post-template"
                            },
                            {
                                "type": "endpoints",
                                "_id": "replace-template"
                            },
                            {
                                "type": "endpoints",
                                "_id": "get-template"
                            },
                            {
                                "type": "endpoints",
                                "_id": "put-template"
                            },
                            {
                                "type": "endpoints",
                                "_id": "patch-template"
                            },
                            {
                                "type": "endpoints",
                                "_id": "delete-template"
                            }
                        ],
                        "divider": false,
                        "name": "Templates"
                    },
                    {
                        "items": [
                            {
                                "type": "endpoints",
                                "_id": "list-machines"
                            },
                            {
                                "type": "endpoints",
                                "_id": "post-machine"
                            },
                            {
                                "type": "endpoints",
                                "_id": "get-machine"
                            },
                            {
                                "type": "endpoints",
                                "_id": "put-machine"
                            },
                            {
                                "type": "endpoints",
                                "_id": "patch-machine"
                            },
                            {
                                "type": "endpoints",
                                "_id": "delete-machine"
                            }
                        ],
                        "divider": false,
                        "name": "Machines"
                    },
                    {
                        "items": [
                            {
                                "type": "schemas",
                                "_id": "machine-input"
                            },
                            {
                                "type": "schemas",
                                "_id": "machine-output"
                            },
                            {
                                "type": "schemas",
                                "_id": "parameterobjectmap"
                            },
                            {
                                "type": "schemas",
                                "_id": "error"
                            },
                            {
                                "type": "schemas",
                                "_id": "template-input"
                            },
                            {
                                "type": "schemas",
                                "_id": "template-output"
                            },
                            {
                                "type": "schemas",
                                "_id": "patchinput"
                            },
                            {
                                "type": "schemas",
                                "_id": "patchline"
                            },
                            {
                                "type": "schemas",
                                "_id": "bootenv-input"
                            },
                            {
                                "type": "schemas",
                                "_id": "bootenv-output"
                            },
                            {
                                "type": "schemas",
                                "_id": "principal"
                            },
                            {
                                "type": "schemas",
                                "_id": "dhcp-lease-input"
                            },
                            {
                                "type": "schemas",
                                "_id": "dhcpoption"
                            },
                            {
                                "type": "schemas",
                                "_id": "dhcp-subnet-input"
                            },
                            {
                                "type": "schemas",
                                "_id": "dhcp-reservation-input"
                            }
                        ],
                        "divider": false,
                        "name": "Models"
                    }
                ]
            }
        },
        "functions": {},
        "textSections": {},
        "mock": {
            "dynamic": false,
            "enabled": false
        }
    },
    "x-tests": {
        "XEzHkGqQapiq8SGBN": {
            "id": "XEzHkGqQapiq8SGBN",
            "name": "Test Empty ISOs list",
            "initialVariables": {},
            "steps": [
                {
                    "id": "seRgefTxyYxnXHGMz",
                    "name": "Get List of ISOs",
                    "capture": {
                        "body": [],
                        "headers": []
                    },
                    "request": {
                        "valid": 2,
                        "transformed": false,
                        "method": "get",
                        "url": "/isos",
                        "pathParams": [],
                        "headers": [],
                        "queryString": [],
                        "cookies": [],
                        "postData": {},
                        "authentication": {},
                        "headersSize": -1,
                        "bodySize": -1
                    },
                    "assertions": [
                        {
                            "location": "response.body",
                            "op": "validate.pass",
                            "match": 200
                        },
                        {
                            "location": "response.code",
                            "op": "eq",
                            "expected": 200
                        },
                        {
                            "location": "response.body",
                            "target": "",
                            "op": "eq",
                            "expected": "[]"
                        }
                    ]
                }
            ]
        }
    },
    "security": [
        {
            "Authorization": []
        },
        {
            "auth_token": []
        },
        {
            "rebar": []
        }
    ]
}
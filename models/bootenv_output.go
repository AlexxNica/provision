package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// BootenvOutput Bootenv  Output
// swagger:model bootenv-output
type BootenvOutput struct {
	BootenvInput

	// errors
	Errors []string `json:"Errors"`
}

// UnmarshalJSON unmarshals this object from a JSON structure
func (m *BootenvOutput) UnmarshalJSON(raw []byte) error {

	var aO0 BootenvInput
	if err := swag.ReadJSON(raw, &aO0); err != nil {
		return err
	}
	m.BootenvInput = aO0

	return nil
}

// MarshalJSON marshals this object to a JSON structure
func (m BootenvOutput) MarshalJSON() ([]byte, error) {
	var _parts [][]byte

	aO0, err := swag.WriteJSON(m.BootenvInput)
	if err != nil {
		return nil, err
	}
	_parts = append(_parts, aO0)

	return swag.ConcatJSON(_parts...), nil
}

// Validate validates this bootenv output
func (m *BootenvOutput) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.BootenvInput.Validate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateErrors(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *BootenvOutput) validateErrors(formats strfmt.Registry) error {

	return nil
}

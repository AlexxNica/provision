package isos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// PostIsoHandlerFunc turns a function with the right signature into a post iso handler
type PostIsoHandlerFunc func(PostIsoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn PostIsoHandlerFunc) Handle(params PostIsoParams) middleware.Responder {
	return fn(params)
}

// PostIsoHandler interface for that can handle valid post iso params
type PostIsoHandler interface {
	Handle(PostIsoParams) middleware.Responder
}

// NewPostIso creates a new http.Handler for the post iso operation
func NewPostIso(ctx *middleware.Context, handler PostIsoHandler) *PostIso {
	return &PostIso{Context: ctx, Handler: handler}
}

/*PostIso swagger:route POST /isos/{name} Isos postIso

Create Iso

*/
type PostIso struct {
	Context *middleware.Context
	Handler PostIsoHandler
}

func (o *PostIso) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostIsoParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostIsoCreatedBody post iso created body
// swagger:model PostIsoCreatedBody
type PostIsoCreatedBody struct {

	// name
	// Required: true
	Name *string `json:"Name"`

	// size
	// Required: true
	Size *int64 `json:"Size"`
}

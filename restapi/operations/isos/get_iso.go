package isos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetIsoHandlerFunc turns a function with the right signature into a get iso handler
type GetIsoHandlerFunc func(GetIsoParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetIsoHandlerFunc) Handle(params GetIsoParams) middleware.Responder {
	return fn(params)
}

// GetIsoHandler interface for that can handle valid get iso params
type GetIsoHandler interface {
	Handle(GetIsoParams) middleware.Responder
}

// NewGetIso creates a new http.Handler for the get iso operation
func NewGetIso(ctx *middleware.Context, handler GetIsoHandler) *GetIso {
	return &GetIso{Context: ctx, Handler: handler}
}

/*GetIso swagger:route GET /isos/{name} Isos getIso

Get Iso

*/
type GetIso struct {
	Context *middleware.Context
	Handler GetIsoHandler
}

func (o *GetIso) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetIsoParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

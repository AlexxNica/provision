package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

/*GetTemplateOK get template o k

swagger:response getTemplateOK
*/
type GetTemplateOK struct {

	/*
	  In: Body
	*/
	Payload *models.TemplateOutput `json:"body,omitempty"`
}

// NewGetTemplateOK creates GetTemplateOK with default headers values
func NewGetTemplateOK() *GetTemplateOK {
	return &GetTemplateOK{}
}

// WithPayload adds the payload to the get template o k response
func (o *GetTemplateOK) WithPayload(payload *models.TemplateOutput) *GetTemplateOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get template o k response
func (o *GetTemplateOK) SetPayload(payload *models.TemplateOutput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTemplateOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTemplateUnauthorized get template unauthorized

swagger:response getTemplateUnauthorized
*/
type GetTemplateUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewGetTemplateUnauthorized creates GetTemplateUnauthorized with default headers values
func NewGetTemplateUnauthorized() *GetTemplateUnauthorized {
	return &GetTemplateUnauthorized{}
}

// WithPayload adds the payload to the get template unauthorized response
func (o *GetTemplateUnauthorized) WithPayload(payload *models.Result) *GetTemplateUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get template unauthorized response
func (o *GetTemplateUnauthorized) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTemplateUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTemplateNotFound get template not found

swagger:response getTemplateNotFound
*/
type GetTemplateNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewGetTemplateNotFound creates GetTemplateNotFound with default headers values
func NewGetTemplateNotFound() *GetTemplateNotFound {
	return &GetTemplateNotFound{}
}

// WithPayload adds the payload to the get template not found response
func (o *GetTemplateNotFound) WithPayload(payload *models.Result) *GetTemplateNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get template not found response
func (o *GetTemplateNotFound) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTemplateNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetTemplateInternalServerError get template internal server error

swagger:response getTemplateInternalServerError
*/
type GetTemplateInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewGetTemplateInternalServerError creates GetTemplateInternalServerError with default headers values
func NewGetTemplateInternalServerError() *GetTemplateInternalServerError {
	return &GetTemplateInternalServerError{}
}

// WithPayload adds the payload to the get template internal server error response
func (o *GetTemplateInternalServerError) WithPayload(payload *models.Result) *GetTemplateInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get template internal server error response
func (o *GetTemplateInternalServerError) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetTemplateInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

package files

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
	"github.com/rackn/rocket-skates/models"
)

// PostFileHandlerFunc turns a function with the right signature into a post file handler
type PostFileHandlerFunc func(PostFileParams, *models.Principal) middleware.Responder

// Handle executing the request and returning a response
func (fn PostFileHandlerFunc) Handle(params PostFileParams, principal *models.Principal) middleware.Responder {
	return fn(params, principal)
}

// PostFileHandler interface for that can handle valid post file params
type PostFileHandler interface {
	Handle(PostFileParams, *models.Principal) middleware.Responder
}

// NewPostFile creates a new http.Handler for the post file operation
func NewPostFile(ctx *middleware.Context, handler PostFileHandler) *PostFile {
	return &PostFile{Context: ctx, Handler: handler}
}

/*PostFile swagger:route POST /files/{path} Files postFile

Create File

*/
type PostFile struct {
	Context *middleware.Context
	Handler PostFileHandler
}

func (o *PostFile) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewPostFileParams()

	uprinc, err := o.Context.Authorize(r, route)
	if err != nil {
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}
	var principal *models.Principal
	if uprinc != nil {
		principal = uprinc.(*models.Principal) // this is really a models.Principal, I promise
	}

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params, principal) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

// PostFileCreatedBody post file created body
// swagger:model PostFileCreatedBody
type PostFileCreatedBody struct {

	// name
	// Required: true
	Name *string `json:"Name"`

	// size
	// Required: true
	Size *int64 `json:"Size"`
}

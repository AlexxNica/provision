package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/galthaus/swagger-test/models"
)

/*PostMachineCreated post machine created

swagger:response postMachineCreated
*/
type PostMachineCreated struct {

	/*
	  In: Body
	*/
	Payload PostMachineCreatedBody `json:"body,omitempty"`
}

// NewPostMachineCreated creates PostMachineCreated with default headers values
func NewPostMachineCreated() *PostMachineCreated {
	return &PostMachineCreated{}
}

// WithPayload adds the payload to the post machine created response
func (o *PostMachineCreated) WithPayload(payload PostMachineCreatedBody) *PostMachineCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post machine created response
func (o *PostMachineCreated) SetPayload(payload PostMachineCreatedBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMachineCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

/*PostMachineUnauthorized post machine unauthorized

swagger:response postMachineUnauthorized
*/
type PostMachineUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPostMachineUnauthorized creates PostMachineUnauthorized with default headers values
func NewPostMachineUnauthorized() *PostMachineUnauthorized {
	return &PostMachineUnauthorized{}
}

// WithPayload adds the payload to the post machine unauthorized response
func (o *PostMachineUnauthorized) WithPayload(payload *models.Result) *PostMachineUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post machine unauthorized response
func (o *PostMachineUnauthorized) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMachineUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostMachineConflict post machine conflict

swagger:response postMachineConflict
*/
type PostMachineConflict struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPostMachineConflict creates PostMachineConflict with default headers values
func NewPostMachineConflict() *PostMachineConflict {
	return &PostMachineConflict{}
}

// WithPayload adds the payload to the post machine conflict response
func (o *PostMachineConflict) WithPayload(payload *models.Result) *PostMachineConflict {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post machine conflict response
func (o *PostMachineConflict) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMachineConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(409)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PostMachineInternalServerError post machine internal server error

swagger:response postMachineInternalServerError
*/
type PostMachineInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPostMachineInternalServerError creates PostMachineInternalServerError with default headers values
func NewPostMachineInternalServerError() *PostMachineInternalServerError {
	return &PostMachineInternalServerError{}
}

// WithPayload adds the payload to the post machine internal server error response
func (o *PostMachineInternalServerError) WithPayload(payload *models.Result) *PostMachineInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post machine internal server error response
func (o *PostMachineInternalServerError) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostMachineInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

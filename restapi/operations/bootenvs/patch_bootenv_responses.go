package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/rackn/rocket-skates/models"
)

/*PatchBootenvAccepted patch bootenv accepted

swagger:response patchBootenvAccepted
*/
type PatchBootenvAccepted struct {

	/*
	  In: Body
	*/
	Payload *models.BootenvInput `json:"body,omitempty"`
}

// NewPatchBootenvAccepted creates PatchBootenvAccepted with default headers values
func NewPatchBootenvAccepted() *PatchBootenvAccepted {
	return &PatchBootenvAccepted{}
}

// WithPayload adds the payload to the patch bootenv accepted response
func (o *PatchBootenvAccepted) WithPayload(payload *models.BootenvInput) *PatchBootenvAccepted {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch bootenv accepted response
func (o *PatchBootenvAccepted) SetPayload(payload *models.BootenvInput) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBootenvAccepted) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(202)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchBootenvUnauthorized patch bootenv unauthorized

swagger:response patchBootenvUnauthorized
*/
type PatchBootenvUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPatchBootenvUnauthorized creates PatchBootenvUnauthorized with default headers values
func NewPatchBootenvUnauthorized() *PatchBootenvUnauthorized {
	return &PatchBootenvUnauthorized{}
}

// WithPayload adds the payload to the patch bootenv unauthorized response
func (o *PatchBootenvUnauthorized) WithPayload(payload *models.Result) *PatchBootenvUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch bootenv unauthorized response
func (o *PatchBootenvUnauthorized) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBootenvUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchBootenvNotFound patch bootenv not found

swagger:response patchBootenvNotFound
*/
type PatchBootenvNotFound struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPatchBootenvNotFound creates PatchBootenvNotFound with default headers values
func NewPatchBootenvNotFound() *PatchBootenvNotFound {
	return &PatchBootenvNotFound{}
}

// WithPayload adds the payload to the patch bootenv not found response
func (o *PatchBootenvNotFound) WithPayload(payload *models.Result) *PatchBootenvNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch bootenv not found response
func (o *PatchBootenvNotFound) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBootenvNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchBootenvExpectationFailed patch bootenv expectation failed

swagger:response patchBootenvExpectationFailed
*/
type PatchBootenvExpectationFailed struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPatchBootenvExpectationFailed creates PatchBootenvExpectationFailed with default headers values
func NewPatchBootenvExpectationFailed() *PatchBootenvExpectationFailed {
	return &PatchBootenvExpectationFailed{}
}

// WithPayload adds the payload to the patch bootenv expectation failed response
func (o *PatchBootenvExpectationFailed) WithPayload(payload *models.Result) *PatchBootenvExpectationFailed {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch bootenv expectation failed response
func (o *PatchBootenvExpectationFailed) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBootenvExpectationFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(417)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*PatchBootenvInternalServerError patch bootenv internal server error

swagger:response patchBootenvInternalServerError
*/
type PatchBootenvInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Result `json:"body,omitempty"`
}

// NewPatchBootenvInternalServerError creates PatchBootenvInternalServerError with default headers values
func NewPatchBootenvInternalServerError() *PatchBootenvInternalServerError {
	return &PatchBootenvInternalServerError{}
}

// WithPayload adds the payload to the patch bootenv internal server error response
func (o *PatchBootenvInternalServerError) WithPayload(payload *models.Result) *PatchBootenvInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the patch bootenv internal server error response
func (o *PatchBootenvInternalServerError) SetPayload(payload *models.Result) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PatchBootenvInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

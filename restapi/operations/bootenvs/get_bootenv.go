package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetBootenvHandlerFunc turns a function with the right signature into a get bootenv handler
type GetBootenvHandlerFunc func(GetBootenvParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetBootenvHandlerFunc) Handle(params GetBootenvParams) middleware.Responder {
	return fn(params)
}

// GetBootenvHandler interface for that can handle valid get bootenv params
type GetBootenvHandler interface {
	Handle(GetBootenvParams) middleware.Responder
}

// NewGetBootenv creates a new http.Handler for the get bootenv operation
func NewGetBootenv(ctx *middleware.Context, handler GetBootenvHandler) *GetBootenv {
	return &GetBootenv{Context: ctx, Handler: handler}
}

/*GetBootenv swagger:route GET /bootenvs/{name} Bootenvs getBootenv

Get Bootenv

*/
type GetBootenv struct {
	Context *middleware.Context
	Handler GetBootenvHandler
}

func (o *GetBootenv) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewGetBootenvParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}

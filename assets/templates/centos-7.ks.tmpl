# DigitalRebar Provision Centos-7 (and related distros) kickstart

install
url --url {{ .Env.InstallUrl }}
# Add support for our local proxy.
repo --name="CentOS"  --baseurl={{ .Env.InstallUrl }} {{if .ParamExists "proxy-servers"}} --proxy="{{index (.Param "proxy-servers") 0 "url"}}"{{end}} --cost=100
# key --skip
# Disable geolocation for language and timezone
# Currently broken by https://bugzilla.redhat.com/show_bug.cgi?id=1111717
# geoloc 0
timezone --utc UTC
lang en_US.UTF-8
keyboard us
# rebar
rootpw --iscrypted {{if .ParamExists "provisioner-default-password-hash"}}{{ .Param "provisioner-default-password-hash" }}{{else}}$6$rebar$HBaBj/uDmsQMEw4Si6eja9Yba3rhB73Na36hbrp9KxDHm6s5veeWyXlsUkoxRACtP47978iiidziRdsYUC7gC/{{end}}
firewall --disabled
authconfig --enableshadow --enablemd5
selinux --disabled

bootloader --location=mbr {{if .ParamExists "operating-system-disk"}}--driveorder={{ .Param "operating-system-disk" }}{{end}} --append="rhgb quiet"
zerombr
{{if .ParamExists "operating-system-disk"}}ignoredisk --only-use={{ .Param "operating-system-disk" }}{{end}}
clearpart --all {{if .ParamExists "operating-system-disk"}}--drives={{ .Param "operating-system-disk" }}{{end}}
part /boot --fstype ext4 --size=512 {{if .ParamExists "operating-system-disk"}}--ondisk={{ .Param "operating-system-disk" }}{{end}}
part /boot/efi --fstype vfat --size=512 {{if .ParamExists "operating-system-disk"}}--ondisk={{ .Param "operating-system-disk" }}{{end}}
part swap --recommended
part pv.6 --size=1 --grow {{if .ParamExists "operating-system-disk"}}--ondisk={{ .Param "operating-system-disk" }}{{end}}
volgroup {{ .Machine.ShortName }} --pesize=32768 pv.6
logvol / --fstype ext4 --name=lv_root --vgname={{ .Machine.ShortName }} --size=1 --grow --maxsize=10240
text
reboot

%packages
@core
trousers
fipscheck
device-mapper-multipath
openssh
curl.x86_64
efibootmgr
tar
%end

%post

exec > /root/post-install.log 2>&1
set -x
export PS4='${BASH_SOURCE}@${LINENO}(${FUNCNAME[0]}): '


(cd /etc/yum.repos.d; rm -f * || :)

# Use the install repo from the provisioner for local package installation
cat >/etc/yum.repos.d/00-rebar-base.repo <<EOF
[rebar-base]
name=DigitalRebar Provision Base Repo
baseurl={{.Env.InstallUrl}}
gpgcheck=0
EOF

HOSTNAME="{{.Machine.Name}}"

if [ -f /etc/sysconfig/network ] ; then
      sed -i -e "s/HOSTNAME=.*/HOSTNAME=${HOSTNAME}/" /etc/sysconfig/network
fi
echo "${HOSTNAME#*.}" >/etc/domainname
echo "$HOSTNAME" >/etc/hostname
hostname "$HOSTNAME"
export HOSTNAME

{{if .ParamExists "access_keys"}}
mkdir -p /root/.ssh
cat >/root/.ssh/authorized_keys <<EOF
### BEGIN GENERATED CONTENT
{{ range $key := .Param "access_keys" }}{{$key}}{{ end }}
### END GENERATED CONTENT
EOF
echo "PermitRootLogin without-password" >> /etc/ssh/sshd_config
echo "AcceptEnv http_proxy https_proxy no_proxy" >> /etc/ssh/sshd_config
{{end}}

{{if .ParamExists "proxy-servers"}}
# Setup a proxy for the environment
echo "http_proxy={{index (.Param "proxy-servers") 0 "url"}}" >> /etc/environment
echo "https_proxy={{index (.Param "proxy-servers") 0 "url"}}" >> /etc/environment
echo "no_proxy=127.0.0.1,localhost,::1,{{index (.Param "proxy-servers") 0 "address"}}" >> /etc/environment

# Setup bash proxy env
mkdir -p /etc/profile.d
echo "http_proxy={{index (.Param "proxy-servers") 0 "url"}}" >> /etc/profile.d/proxy.sh
echo "https_proxy={{index (.Param "proxy-servers") 0 "url"}}" >>  /etc/profile.d/proxy.sh
echo "no_proxy=127.0.0.1,localhost,::1,{{index (.Param "proxy-servers") 0 "address"}}" >> /etc/profile.d/proxy.sh
{{end}}

# Tell dr-provision we are done
(cd /bin; curl -s -f -L -o drpcli "{{.ProvisionerURL}}/files/drpcli.amd64.linux"; chmod 755 drpcli)
export RS_ENDPOINT="{{.ApiURL}}"
# This will contain a token appropriate for the path being
# used below.  Either a create or update/show token
export RS_TOKEN="{{.GenerateToken}}"
drpcli machines update "{{.Machine.UUID}}" '{"BootEnv": "local"}'

sync
%end

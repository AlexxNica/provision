package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/rackn/rocket-skates/models"
)

// DeleteMachineReader is a Reader for the DeleteMachine structure.
type DeleteMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteMachineNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteMachineConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteMachineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteMachineNoContent creates a DeleteMachineNoContent with default headers values
func NewDeleteMachineNoContent() *DeleteMachineNoContent {
	return &DeleteMachineNoContent{}
}

/*DeleteMachineNoContent handles this case with default header values.

DeleteMachineNoContent delete machine no content
*/
type DeleteMachineNoContent struct {
}

func (o *DeleteMachineNoContent) Error() string {
	return fmt.Sprintf("[DELETE /machines/{uuid}][%d] deleteMachineNoContent ", 204)
}

func (o *DeleteMachineNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteMachineNotFound creates a DeleteMachineNotFound with default headers values
func NewDeleteMachineNotFound() *DeleteMachineNotFound {
	return &DeleteMachineNotFound{}
}

/*DeleteMachineNotFound handles this case with default header values.

DeleteMachineNotFound delete machine not found
*/
type DeleteMachineNotFound struct {
	Payload *models.Result
}

func (o *DeleteMachineNotFound) Error() string {
	return fmt.Sprintf("[DELETE /machines/{uuid}][%d] deleteMachineNotFound  %+v", 404, o.Payload)
}

func (o *DeleteMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMachineConflict creates a DeleteMachineConflict with default headers values
func NewDeleteMachineConflict() *DeleteMachineConflict {
	return &DeleteMachineConflict{}
}

/*DeleteMachineConflict handles this case with default header values.

DeleteMachineConflict delete machine conflict
*/
type DeleteMachineConflict struct {
	Payload *models.Result
}

func (o *DeleteMachineConflict) Error() string {
	return fmt.Sprintf("[DELETE /machines/{uuid}][%d] deleteMachineConflict  %+v", 409, o.Payload)
}

func (o *DeleteMachineConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteMachineInternalServerError creates a DeleteMachineInternalServerError with default headers values
func NewDeleteMachineInternalServerError() *DeleteMachineInternalServerError {
	return &DeleteMachineInternalServerError{}
}

/*DeleteMachineInternalServerError handles this case with default header values.

DeleteMachineInternalServerError delete machine internal server error
*/
type DeleteMachineInternalServerError struct {
	Payload *models.Result
}

func (o *DeleteMachineInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /machines/{uuid}][%d] deleteMachineInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteMachineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

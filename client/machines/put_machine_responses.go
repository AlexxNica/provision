package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/rackn/rocket-skates/models"
)

// PutMachineReader is a Reader for the PutMachine structure.
type PutMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutMachineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutMachineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutMachineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutMachineOK creates a PutMachineOK with default headers values
func NewPutMachineOK() *PutMachineOK {
	return &PutMachineOK{}
}

/*PutMachineOK handles this case with default header values.

PutMachineOK put machine o k
*/
type PutMachineOK struct {
	Payload PutMachineOKBody
}

func (o *PutMachineOK) Error() string {
	return fmt.Sprintf("[PUT /machines/{uuid}][%d] putMachineOK  %+v", 200, o.Payload)
}

func (o *PutMachineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMachineUnauthorized creates a PutMachineUnauthorized with default headers values
func NewPutMachineUnauthorized() *PutMachineUnauthorized {
	return &PutMachineUnauthorized{}
}

/*PutMachineUnauthorized handles this case with default header values.

PutMachineUnauthorized put machine unauthorized
*/
type PutMachineUnauthorized struct {
	Payload *models.Result
}

func (o *PutMachineUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /machines/{uuid}][%d] putMachineUnauthorized  %+v", 401, o.Payload)
}

func (o *PutMachineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMachineNotFound creates a PutMachineNotFound with default headers values
func NewPutMachineNotFound() *PutMachineNotFound {
	return &PutMachineNotFound{}
}

/*PutMachineNotFound handles this case with default header values.

PutMachineNotFound put machine not found
*/
type PutMachineNotFound struct {
	Payload *models.Result
}

func (o *PutMachineNotFound) Error() string {
	return fmt.Sprintf("[PUT /machines/{uuid}][%d] putMachineNotFound  %+v", 404, o.Payload)
}

func (o *PutMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutMachineInternalServerError creates a PutMachineInternalServerError with default headers values
func NewPutMachineInternalServerError() *PutMachineInternalServerError {
	return &PutMachineInternalServerError{}
}

/*PutMachineInternalServerError handles this case with default header values.

PutMachineInternalServerError put machine internal server error
*/
type PutMachineInternalServerError struct {
	Payload *models.Result
}

func (o *PutMachineInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /machines/{uuid}][%d] putMachineInternalServerError  %+v", 500, o.Payload)
}

func (o *PutMachineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*PutMachineOKBody put machine o k body
swagger:model PutMachineOKBody
*/
type PutMachineOKBody struct {

	// data
	// Required: true
	Data *models.MachineOutput `json:"Data"`

	// result
	// Required: true
	Result *models.Result `json:"Result"`
}

package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/rackn/rocket-skates/models"
)

// ListMachinesReader is a Reader for the ListMachines structure.
type ListMachinesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListMachinesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListMachinesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListMachinesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListMachinesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListMachinesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListMachinesOK creates a ListMachinesOK with default headers values
func NewListMachinesOK() *ListMachinesOK {
	return &ListMachinesOK{}
}

/*ListMachinesOK handles this case with default header values.

ListMachinesOK list machines o k
*/
type ListMachinesOK struct {
	Payload []*models.MachineOutput
}

func (o *ListMachinesOK) Error() string {
	return fmt.Sprintf("[GET /machines][%d] listMachinesOK  %+v", 200, o.Payload)
}

func (o *ListMachinesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMachinesUnauthorized creates a ListMachinesUnauthorized with default headers values
func NewListMachinesUnauthorized() *ListMachinesUnauthorized {
	return &ListMachinesUnauthorized{}
}

/*ListMachinesUnauthorized handles this case with default header values.

ListMachinesUnauthorized list machines unauthorized
*/
type ListMachinesUnauthorized struct {
	Payload *models.Error
}

func (o *ListMachinesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /machines][%d] listMachinesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListMachinesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMachinesNotFound creates a ListMachinesNotFound with default headers values
func NewListMachinesNotFound() *ListMachinesNotFound {
	return &ListMachinesNotFound{}
}

/*ListMachinesNotFound handles this case with default header values.

ListMachinesNotFound list machines not found
*/
type ListMachinesNotFound struct {
	Payload *models.Error
}

func (o *ListMachinesNotFound) Error() string {
	return fmt.Sprintf("[GET /machines][%d] listMachinesNotFound  %+v", 404, o.Payload)
}

func (o *ListMachinesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListMachinesInternalServerError creates a ListMachinesInternalServerError with default headers values
func NewListMachinesInternalServerError() *ListMachinesInternalServerError {
	return &ListMachinesInternalServerError{}
}

/*ListMachinesInternalServerError handles this case with default header values.

ListMachinesInternalServerError list machines internal server error
*/
type ListMachinesInternalServerError struct {
	Payload *models.Error
}

func (o *ListMachinesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /machines][%d] listMachinesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListMachinesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

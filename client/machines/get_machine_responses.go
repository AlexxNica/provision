package machines

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/rackn/rocket-skates/models"
)

// GetMachineReader is a Reader for the GetMachine structure.
type GetMachineReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetMachineReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetMachineOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetMachineUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetMachineNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetMachineInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetMachineOK creates a GetMachineOK with default headers values
func NewGetMachineOK() *GetMachineOK {
	return &GetMachineOK{}
}

/*GetMachineOK handles this case with default header values.

GetMachineOK get machine o k
*/
type GetMachineOK struct {
	Payload GetMachineOKBody
}

func (o *GetMachineOK) Error() string {
	return fmt.Sprintf("[GET /machines/{uuid}][%d] getMachineOK  %+v", 200, o.Payload)
}

func (o *GetMachineOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineUnauthorized creates a GetMachineUnauthorized with default headers values
func NewGetMachineUnauthorized() *GetMachineUnauthorized {
	return &GetMachineUnauthorized{}
}

/*GetMachineUnauthorized handles this case with default header values.

GetMachineUnauthorized get machine unauthorized
*/
type GetMachineUnauthorized struct {
	Payload *models.Result
}

func (o *GetMachineUnauthorized) Error() string {
	return fmt.Sprintf("[GET /machines/{uuid}][%d] getMachineUnauthorized  %+v", 401, o.Payload)
}

func (o *GetMachineUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineNotFound creates a GetMachineNotFound with default headers values
func NewGetMachineNotFound() *GetMachineNotFound {
	return &GetMachineNotFound{}
}

/*GetMachineNotFound handles this case with default header values.

GetMachineNotFound get machine not found
*/
type GetMachineNotFound struct {
	Payload *models.Result
}

func (o *GetMachineNotFound) Error() string {
	return fmt.Sprintf("[GET /machines/{uuid}][%d] getMachineNotFound  %+v", 404, o.Payload)
}

func (o *GetMachineNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetMachineInternalServerError creates a GetMachineInternalServerError with default headers values
func NewGetMachineInternalServerError() *GetMachineInternalServerError {
	return &GetMachineInternalServerError{}
}

/*GetMachineInternalServerError handles this case with default header values.

GetMachineInternalServerError get machine internal server error
*/
type GetMachineInternalServerError struct {
	Payload *models.Result
}

func (o *GetMachineInternalServerError) Error() string {
	return fmt.Sprintf("[GET /machines/{uuid}][%d] getMachineInternalServerError  %+v", 500, o.Payload)
}

func (o *GetMachineInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetMachineOKBody get machine o k body
swagger:model GetMachineOKBody
*/
type GetMachineOKBody struct {

	// data
	// Required: true
	Data *models.MachineOutput `json:"Data"`

	// result
	// Required: true
	Result *models.Result `json:"Result"`
}

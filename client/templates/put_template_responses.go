package templates

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/galthaus/swagger-test/models"
)

// PutTemplateReader is a Reader for the PutTemplate structure.
type PutTemplateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutTemplateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutTemplateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutTemplateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutTemplateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutTemplateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutTemplateOK creates a PutTemplateOK with default headers values
func NewPutTemplateOK() *PutTemplateOK {
	return &PutTemplateOK{}
}

/*PutTemplateOK handles this case with default header values.

PutTemplateOK put template o k
*/
type PutTemplateOK struct {
	Payload *models.TemplateOutput
}

func (o *PutTemplateOK) Error() string {
	return fmt.Sprintf("[PUT /templates/{uuid}][%d] putTemplateOK  %+v", 200, o.Payload)
}

func (o *PutTemplateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TemplateOutput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTemplateUnauthorized creates a PutTemplateUnauthorized with default headers values
func NewPutTemplateUnauthorized() *PutTemplateUnauthorized {
	return &PutTemplateUnauthorized{}
}

/*PutTemplateUnauthorized handles this case with default header values.

PutTemplateUnauthorized put template unauthorized
*/
type PutTemplateUnauthorized struct {
	Payload *models.Result
}

func (o *PutTemplateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /templates/{uuid}][%d] putTemplateUnauthorized  %+v", 401, o.Payload)
}

func (o *PutTemplateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTemplateNotFound creates a PutTemplateNotFound with default headers values
func NewPutTemplateNotFound() *PutTemplateNotFound {
	return &PutTemplateNotFound{}
}

/*PutTemplateNotFound handles this case with default header values.

PutTemplateNotFound put template not found
*/
type PutTemplateNotFound struct {
	Payload *models.Result
}

func (o *PutTemplateNotFound) Error() string {
	return fmt.Sprintf("[PUT /templates/{uuid}][%d] putTemplateNotFound  %+v", 404, o.Payload)
}

func (o *PutTemplateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutTemplateInternalServerError creates a PutTemplateInternalServerError with default headers values
func NewPutTemplateInternalServerError() *PutTemplateInternalServerError {
	return &PutTemplateInternalServerError{}
}

/*PutTemplateInternalServerError handles this case with default header values.

PutTemplateInternalServerError put template internal server error
*/
type PutTemplateInternalServerError struct {
	Payload *models.Result
}

func (o *PutTemplateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /templates/{uuid}][%d] putTemplateInternalServerError  %+v", 500, o.Payload)
}

func (o *PutTemplateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

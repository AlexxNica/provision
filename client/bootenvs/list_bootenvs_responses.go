package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/rackn/rocket-skates/models"
)

// ListBootenvsReader is a Reader for the ListBootenvs structure.
type ListBootenvsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBootenvsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListBootenvsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListBootenvsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListBootenvsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListBootenvsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListBootenvsOK creates a ListBootenvsOK with default headers values
func NewListBootenvsOK() *ListBootenvsOK {
	return &ListBootenvsOK{}
}

/*ListBootenvsOK handles this case with default header values.

ListBootenvsOK list bootenvs o k
*/
type ListBootenvsOK struct {
	Payload []*models.BootenvInput
}

func (o *ListBootenvsOK) Error() string {
	return fmt.Sprintf("[GET /bootenvs][%d] listBootenvsOK  %+v", 200, o.Payload)
}

func (o *ListBootenvsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBootenvsUnauthorized creates a ListBootenvsUnauthorized with default headers values
func NewListBootenvsUnauthorized() *ListBootenvsUnauthorized {
	return &ListBootenvsUnauthorized{}
}

/*ListBootenvsUnauthorized handles this case with default header values.

ListBootenvsUnauthorized list bootenvs unauthorized
*/
type ListBootenvsUnauthorized struct {
	Payload *models.Result
}

func (o *ListBootenvsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bootenvs][%d] listBootenvsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListBootenvsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBootenvsNotFound creates a ListBootenvsNotFound with default headers values
func NewListBootenvsNotFound() *ListBootenvsNotFound {
	return &ListBootenvsNotFound{}
}

/*ListBootenvsNotFound handles this case with default header values.

ListBootenvsNotFound list bootenvs not found
*/
type ListBootenvsNotFound struct {
	Payload *models.Result
}

func (o *ListBootenvsNotFound) Error() string {
	return fmt.Sprintf("[GET /bootenvs][%d] listBootenvsNotFound  %+v", 404, o.Payload)
}

func (o *ListBootenvsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBootenvsInternalServerError creates a ListBootenvsInternalServerError with default headers values
func NewListBootenvsInternalServerError() *ListBootenvsInternalServerError {
	return &ListBootenvsInternalServerError{}
}

/*ListBootenvsInternalServerError handles this case with default header values.

ListBootenvsInternalServerError list bootenvs internal server error
*/
type ListBootenvsInternalServerError struct {
	Payload *models.Result
}

func (o *ListBootenvsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bootenvs][%d] listBootenvsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListBootenvsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

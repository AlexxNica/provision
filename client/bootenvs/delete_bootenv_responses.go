package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/galthaus/swagger-test/models"
)

// DeleteBootenvReader is a Reader for the DeleteBootenv structure.
type DeleteBootenvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteBootenvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteBootenvNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewDeleteBootenvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteBootenvConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteBootenvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteBootenvNoContent creates a DeleteBootenvNoContent with default headers values
func NewDeleteBootenvNoContent() *DeleteBootenvNoContent {
	return &DeleteBootenvNoContent{}
}

/*DeleteBootenvNoContent handles this case with default header values.

DeleteBootenvNoContent delete bootenv no content
*/
type DeleteBootenvNoContent struct {
}

func (o *DeleteBootenvNoContent) Error() string {
	return fmt.Sprintf("[DELETE /bootenvs/{name}][%d] deleteBootenvNoContent ", 204)
}

func (o *DeleteBootenvNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteBootenvNotFound creates a DeleteBootenvNotFound with default headers values
func NewDeleteBootenvNotFound() *DeleteBootenvNotFound {
	return &DeleteBootenvNotFound{}
}

/*DeleteBootenvNotFound handles this case with default header values.

DeleteBootenvNotFound delete bootenv not found
*/
type DeleteBootenvNotFound struct {
	Payload *models.Result
}

func (o *DeleteBootenvNotFound) Error() string {
	return fmt.Sprintf("[DELETE /bootenvs/{name}][%d] deleteBootenvNotFound  %+v", 404, o.Payload)
}

func (o *DeleteBootenvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootenvConflict creates a DeleteBootenvConflict with default headers values
func NewDeleteBootenvConflict() *DeleteBootenvConflict {
	return &DeleteBootenvConflict{}
}

/*DeleteBootenvConflict handles this case with default header values.

DeleteBootenvConflict delete bootenv conflict
*/
type DeleteBootenvConflict struct {
	Payload *models.Result
}

func (o *DeleteBootenvConflict) Error() string {
	return fmt.Sprintf("[DELETE /bootenvs/{name}][%d] deleteBootenvConflict  %+v", 409, o.Payload)
}

func (o *DeleteBootenvConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteBootenvInternalServerError creates a DeleteBootenvInternalServerError with default headers values
func NewDeleteBootenvInternalServerError() *DeleteBootenvInternalServerError {
	return &DeleteBootenvInternalServerError{}
}

/*DeleteBootenvInternalServerError handles this case with default header values.

DeleteBootenvInternalServerError delete bootenv internal server error
*/
type DeleteBootenvInternalServerError struct {
	Payload *models.Result
}

func (o *DeleteBootenvInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /bootenvs/{name}][%d] deleteBootenvInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteBootenvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

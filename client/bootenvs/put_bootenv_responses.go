package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/galthaus/swagger-test/models"
)

// PutBootenvReader is a Reader for the PutBootenv structure.
type PutBootenvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutBootenvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutBootenvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewPutBootenvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutBootenvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutBootenvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutBootenvOK creates a PutBootenvOK with default headers values
func NewPutBootenvOK() *PutBootenvOK {
	return &PutBootenvOK{}
}

/*PutBootenvOK handles this case with default header values.

PutBootenvOK put bootenv o k
*/
type PutBootenvOK struct {
	Payload *models.BootenvInput
}

func (o *PutBootenvOK) Error() string {
	return fmt.Sprintf("[PUT /bootenvs/{name}][%d] putBootenvOK  %+v", 200, o.Payload)
}

func (o *PutBootenvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BootenvInput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBootenvUnauthorized creates a PutBootenvUnauthorized with default headers values
func NewPutBootenvUnauthorized() *PutBootenvUnauthorized {
	return &PutBootenvUnauthorized{}
}

/*PutBootenvUnauthorized handles this case with default header values.

PutBootenvUnauthorized put bootenv unauthorized
*/
type PutBootenvUnauthorized struct {
	Payload *models.Result
}

func (o *PutBootenvUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /bootenvs/{name}][%d] putBootenvUnauthorized  %+v", 401, o.Payload)
}

func (o *PutBootenvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBootenvNotFound creates a PutBootenvNotFound with default headers values
func NewPutBootenvNotFound() *PutBootenvNotFound {
	return &PutBootenvNotFound{}
}

/*PutBootenvNotFound handles this case with default header values.

PutBootenvNotFound put bootenv not found
*/
type PutBootenvNotFound struct {
	Payload *models.Result
}

func (o *PutBootenvNotFound) Error() string {
	return fmt.Sprintf("[PUT /bootenvs/{name}][%d] putBootenvNotFound  %+v", 404, o.Payload)
}

func (o *PutBootenvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutBootenvInternalServerError creates a PutBootenvInternalServerError with default headers values
func NewPutBootenvInternalServerError() *PutBootenvInternalServerError {
	return &PutBootenvInternalServerError{}
}

/*PutBootenvInternalServerError handles this case with default header values.

PutBootenvInternalServerError put bootenv internal server error
*/
type PutBootenvInternalServerError struct {
	Payload *models.Result
}

func (o *PutBootenvInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /bootenvs/{name}][%d] putBootenvInternalServerError  %+v", 500, o.Payload)
}

func (o *PutBootenvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

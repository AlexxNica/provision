package bootenvs

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/galthaus/swagger-test/models"
)

// GetBootenvReader is a Reader for the GetBootenv structure.
type GetBootenvReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetBootenvReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetBootenvOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetBootenvUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetBootenvNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetBootenvInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetBootenvOK creates a GetBootenvOK with default headers values
func NewGetBootenvOK() *GetBootenvOK {
	return &GetBootenvOK{}
}

/*GetBootenvOK handles this case with default header values.

GetBootenvOK get bootenv o k
*/
type GetBootenvOK struct {
	Payload *models.BootenvInput
}

func (o *GetBootenvOK) Error() string {
	return fmt.Sprintf("[GET /bootenvs/{name}][%d] getBootenvOK  %+v", 200, o.Payload)
}

func (o *GetBootenvOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BootenvInput)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootenvUnauthorized creates a GetBootenvUnauthorized with default headers values
func NewGetBootenvUnauthorized() *GetBootenvUnauthorized {
	return &GetBootenvUnauthorized{}
}

/*GetBootenvUnauthorized handles this case with default header values.

GetBootenvUnauthorized get bootenv unauthorized
*/
type GetBootenvUnauthorized struct {
	Payload *models.Result
}

func (o *GetBootenvUnauthorized) Error() string {
	return fmt.Sprintf("[GET /bootenvs/{name}][%d] getBootenvUnauthorized  %+v", 401, o.Payload)
}

func (o *GetBootenvUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootenvNotFound creates a GetBootenvNotFound with default headers values
func NewGetBootenvNotFound() *GetBootenvNotFound {
	return &GetBootenvNotFound{}
}

/*GetBootenvNotFound handles this case with default header values.

GetBootenvNotFound get bootenv not found
*/
type GetBootenvNotFound struct {
	Payload *models.Result
}

func (o *GetBootenvNotFound) Error() string {
	return fmt.Sprintf("[GET /bootenvs/{name}][%d] getBootenvNotFound  %+v", 404, o.Payload)
}

func (o *GetBootenvNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetBootenvInternalServerError creates a GetBootenvInternalServerError with default headers values
func NewGetBootenvInternalServerError() *GetBootenvInternalServerError {
	return &GetBootenvInternalServerError{}
}

/*GetBootenvInternalServerError handles this case with default header values.

GetBootenvInternalServerError get bootenv internal server error
*/
type GetBootenvInternalServerError struct {
	Payload *models.Result
}

func (o *GetBootenvInternalServerError) Error() string {
	return fmt.Sprintf("[GET /bootenvs/{name}][%d] getBootenvInternalServerError  %+v", 500, o.Payload)
}

func (o *GetBootenvInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Result)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

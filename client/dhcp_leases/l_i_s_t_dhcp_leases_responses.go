package dhcp_leases

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/rackn/rocket-skates/models"
)

// LISTDhcpLeasesReader is a Reader for the LISTDhcpLeases structure.
type LISTDhcpLeasesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *LISTDhcpLeasesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewLISTDhcpLeasesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewLISTDhcpLeasesOK creates a LISTDhcpLeasesOK with default headers values
func NewLISTDhcpLeasesOK() *LISTDhcpLeasesOK {
	return &LISTDhcpLeasesOK{}
}

/*LISTDhcpLeasesOK handles this case with default header values.

LISTDhcpLeasesOK l i s t dhcp leases o k
*/
type LISTDhcpLeasesOK struct {
	Payload []*models.DhcpLeaseInput
}

func (o *LISTDhcpLeasesOK) Error() string {
	return fmt.Sprintf("[GET /leases][%d] lISTDhcpLeasesOK  %+v", 200, o.Payload)
}

func (o *LISTDhcpLeasesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
